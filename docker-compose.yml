version: '3'

services:
  db:
    image: postgres:10
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432
    networks:
      - backend
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  cache:
    image: redis:alpine
    ports:
      - 6379
    networks:
      - backend
    restart: unless-stopped

  geoip:
    image: cryptlex/freegeoip:3.6.0
    ports:
      - 8080
    networks:
      - backend
    restart: unless-stopped
  
  loadbalancer: 
    image: linuxserver/letsencrypt:0.31.0-ls4
    volumes:
      - ./config:/config
    environment:
      - EMAIL=${EMAIL}
      - URL=${WEB_DOMAIN}
    depends_on:
      - webapi
    ports:
      - 80:80
      - 443:443
    networks:
      - backend
    restart: unless-stopped

  webapi:
    image: cryptlex/cryptlex-web-api-enterprise:3.10.2
    depends_on:
      - db
      - geoip
    env_file: webapi.env
    environment:
      JWT_AUDIENCE: https://${WEB_DOMAIN}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://:@cache:6379
      GEOIPSERVER_URL: http://geoip:8080/json
    networks:
      - backend
    restart: unless-stopped
    ports:
      - 5000

  dashboard:
    image: cryptlex/cryptlex-web-dashboard:3.0.6
    depends_on:
      - webapi
    env_file: dashboard.env
    environment:
      WEB_API_BASE_URL: https://${WEB_DOMAIN}
    networks:
      - frontend
    restart: unless-stopped
    ports:
      - 4200:80

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  db_data:
