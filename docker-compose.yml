version: '3'

services:
  db:
    image: postgres:10
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432
    networks:
      - backend
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    labels:
      - traefik.enable=false

  cache:
    image: redis:alpine
    ports:
      - 6379
    networks:
      - backend
    restart: unless-stopped
    labels:
      - traefik.enable=false

  geoip:
    image: cryptlex/freegeoip:3.6.0
    ports:
      - 8080
    networks:
      - backend
    restart: unless-stopped
    labels:
      - traefik.enable=false
  
  reverse-proxy:
    image: traefik:1.7-alpine
    command: --api --docker --acme.email=${EMAIL} --logLevel="DEBUG"
    ports:
      - "80:80"     # The HTTP port
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json
    expose:
      # traefik dashboard port
      - 8080
    labels:
      traefik.enable: true
      traefik.frontend.rule: "Host:${DASHBOARD_DOMAIN}; PathPrefixStrip:/traefik" 
      traefik.frontend.auth.basic: "admin:$$apr1$$.F7lXgnu$$y7ohHc8cbhaa8SsOn0Mzs1"
      traefik.port: 8080
    networks:
      - backend
    restart: unless-stopped

  webapi:
    image: cryptlex/cryptlex-web-api-enterprise:3.10.3
    depends_on:
      - db
      - geoip
    env_file: webapi.env
    environment:
      JWT_AUDIENCE: http://${WEB_API_DOMAIN}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://cache:6379
      GEOIPSERVER_URL: http://geoip:8080/json
    networks:
      - backend
    restart: unless-stopped
    ports:
      - 5000
    labels:
      - traefik.backend=cryptlex-webapi
      - traefik.frontend.rule=Host:${WEB_API_DOMAIN}
      - traefik.frontend.passHostHeader=true
      - traefik.docker.network=backend
      - traefik.port=5000

  dashboard:
    image: cryptlex/cryptlex-web-dashboard:3.0.8
    depends_on:
      - webapi
    env_file: dashboard.env
    environment:
      WEB_API_BASE_URL: https://${WEB_API_DOMAIN}
    networks:
      - backend
    restart: unless-stopped
    ports:
      - 4200
    labels:
      - traefik.backend=cryptlex-dashboard
      - traefik.frontend.rule=Host:${DASHBOARD_DOMAIN}
      - traefik.docker.network=backend
      - traefik.port=4200

networks:
  backend:
    driver: bridge

volumes:
  db_data:
