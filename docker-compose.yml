version: '3'

services:
  database:
    image: postgres:15.7-alpine
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432
    networks:
      - backend
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    volumes:
      - database_data:/var/lib/postgresql/data
    labels:
      - traefik.enable=false

  filestore:
    image: minio/minio:RELEASE.2020-08-18T19-41-00Z
    environment:
      MINIO_ACCESS_KEY: ${FILE_STORE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${FILE_STORE_SECRET_KEY}
    command: server /opt/minio
    ports:
      - 9000
    networks:
      - backend
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    volumes:
      - filestore_data:/opt/minio
    labels:
      - traefik.enable=false

  geoip:
    image: cryptlex/freegeoip:latest
    ports:
      - 8080
    networks:
      - backend
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    labels:
      - traefik.enable=false
  
  reverse-proxy:
    image: traefik:1.7-alpine
    command: --api --docker --logLevel=INFO --acme.email=${EMAIL}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json
      - ./ssl:/ssl
    expose:
      # traefik dashboard port
      - 8080
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:${DASHBOARD_DOMAIN};PathPrefixStrip:/traefik
      - traefik.port=8080
      - traefik.frontend.auth.basic=${TRAEFIK_BASIC_AUTH}
    networks:
      - backend
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"

  # not required for single machine deployment
  # cache:
  #   image: redis:alpine
  #   ports:
  #     - 6379
  #   networks:
  #     - backend
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "20m"
  #   labels:
  #     - traefik.enable=false

  web-api:
    image: cryptlex/cryptlex-web-api-enterprise:latest
    depends_on:
      - database
      - geoip
    env_file: web-api.env
    environment:
      JWT_AUDIENCE: http://web-api:5000
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      REDIS_URL: # redis://cache:6379 - not required for single machine deployment
      GEOIPSERVER_URL: http://geoip:8080/json
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    networks:
      - backend
    restart: unless-stopped
    ports:
      - 5000
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    labels:
      - traefik.backend=cryptlex-web-api
      - traefik.frontend.rule=Host:${WEB_API_DOMAIN}
      - traefik.frontend.passHostHeader=true
      - traefik.docker.network=cryptlex-on-premise_backend
      - traefik.port=5000

  dashboard:
    image: cryptlex/cryptlex-web-dashboard:latest
    depends_on:
      - web-api
    env_file: dashboard.env
    environment:
      WEB_API_BASE_URL: https://${WEB_API_DOMAIN}
      RELEASE_SERVER_BASE_URL: https://${RELEASE_SERVER_DOMAIN}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    networks:
      - backend
    restart: unless-stopped
    ports:
      - 4200
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    labels:
      - traefik.backend=cryptlex-dashboard
      - traefik.frontend.rule=Host:${DASHBOARD_DOMAIN}
      - traefik.docker.network=cryptlex-on-premise_backend
      - traefik.port=4200

  release-server:
    image: cryptlex/cryptlex-release-server:latest
    depends_on:
      - web-api
    env_file: release-server.env
    environment:
      WEB_API_BASE_URL: http://web-api:5000
      RELEASE_SERVER_BASE_URL: https://${RELEASE_SERVER_DOMAIN}
      FILE_STORE_ACCESS_KEY: ${FILE_STORE_ACCESS_KEY}
      FILE_STORE_SECRET_KEY: ${FILE_STORE_SECRET_KEY}
      FILE_STORE_ENDPOINT: filestore
      FILE_STORE_PORT: 9000
    networks:
      - backend
    restart: unless-stopped
    ports:
      - 3000
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    labels:
      - traefik.backend=cryptlex-release-server
      - traefik.frontend.rule=Host:${RELEASE_SERVER_DOMAIN}
      - traefik.docker.network=cryptlex-on-premise_backend
      - traefik.port=3000

networks:
  backend:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1300

volumes:
  database_data:
  filestore_data:
